<%-- Load Java libraries, Kinetic models & Identity --%>
<%@page pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<%@page import="java.util.*" %>
<%@page import="com.kineticdata.core.models.*" %>
<%@page import="com.kineticdata.core.web.bundles.Bundle" %>
<%@page import="com.kineticdata.core.web.bundles.BundleSubmissionComponent" %>
<%@page import="com.kineticdata.core.authentication.Identity" %>
<%@page import="org.slf4j.Logger" %>
<%@page import="java.lang.reflect.Method"%>

<%-- Bundle Java libraries --%>
<%@page import="com.kineticdata.bundles.*" %>

<%-- Load tag libraries (JSTL) used in most bundles --%>
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@taglib prefix="x" uri="http://java.sun.com/jsp/jstl/xml" %>
<%@taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<%@taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@taglib prefix="app" uri="http://kineticdata.com/taglibs/core/app" %>
<%@taglib prefix="bundle" uri="http://kineticdata.com/taglibs/bundle" %>
<%@taglib prefix="json" uri="http://kineticdata.com/taglibs/json" %>

<%@include file="/WEB-INF/app/includes/task4/task4.jspf" %>

<%-- Get bundle, space, and kapp objects --%>
<%
    Bundle bundle = (Bundle)request.getAttribute("bundle"); 
    Space space = (Space)request.getAttribute("space");
    Kapp kapp = (Kapp)request.getAttribute("kapp");
    Identity identity = (Identity)request.getAttribute("identity");
%>

<%-- Load helper(s) --%>
<%
    request.setAttribute("json", new com.kineticdata.bundles.JsonHelper());
    request.setAttribute("text", new com.kineticdata.bundles.TextHelper());
    request.setAttribute("time", new com.kineticdata.bundles.TimeHelper());
%>

<%-- I18nHelper --%>
<%@include file="I18nHelper.jspf"%>
<%
    I18nHelper i18nHelper = new I18nHelper(request);
    request.setAttribute("i18n", i18nHelper);
    request.setAttribute("locale", i18nHelper.getLocale());
    request.setAttribute("zoneId", i18nHelper.getZoneId());
%>

<%-- SetupHelper --%>
<%@include file="SetupHelper.jspf"%>
<%
    SetupHelper setupHelper = new SetupHelper(request);
    request.setAttribute("SetupHelper", setupHelper);
%>

<%-- BridgedResourceHelper --%>
<%@include file="BridgedResourceHelper.jspf" %>
<%
    // If the request is scoped to a specific Kapp (space display pages are not)
    if (kapp != null && kapp.hasAttribute("Shared Bridged Resource Form Slug")) {
        // Initialize the LockableSubmissionHelper
        request.setAttribute("BridgedResourceHelper", 
            new BridgedResourceHelper(
                request, 
                bundle.getKappLocation(), 
                kapp.getAttributeValue("Shared Bridged Resource Form Slug")));
    }
%>

<%-- BundleHelper --%>
<%@include file="BundleHelper.jspf"%>
<%
    request.setAttribute("BundleHelper", new BundleHelper(bundle, kapp, space));
%>

<%-- CatalogSearchHelper --%>
<%@include file="CatalogSearchHelper.jspf"%>
<%
    request.setAttribute("CatalogSearchHelper", new CatalogSearchHelper());
%>

<%-- CategoryHelper --%>
<%@include file="CategoryHelper.jspf"%>
<%
    request.setAttribute("CategoryHelper", new CategoryHelper());
%>

<%-- FilehubHelper --%>
<%@include file="FilehubHelper.jspf"%>
<%
    // Declare the filehubHelper, which is referenced in the router.jspf file
    FilehubHelper filehubHelper = null;
    
    /* TODO: Should there be a catch if any of the kapp attributes exist but have a blank string as a value?*/
    // If the request is scoped to a specific Kapp (space display pages are not)
    if (kapp != null && kapp.hasAttribute("Filehub Url")) {
        // Initialize the filehub helper
        filehubHelper = new FilehubHelper(kapp.getAttributeValue("Filehub Url"));
        // Initialize the "Example" filestore
        if (kapp.hasAttribute("Example Filestore Slug")) {
            filehubHelper.addFilestore(
                kapp.getAttributeValue("Example Filestore Slug"),
                kapp.getAttributeValue("Example Filestore Key"),
                kapp.getAttributeValue("Example Filestore Secret"),
                new FilehubHelper.Authorizer() {
                    @Override public boolean canAccess(HttpServletRequest request) {
                        return true;
                    }
                },
                new FilehubHelper.PathBuilder() {
                    @Override public String buildPath(HttpServletRequest request) {
                        //return request.getParameter("path");
                        String path = request.getParameter("form")+
                            "/"+request.getParameter("entry")+
                            "/"+request.getParameter("field");
                        if (request.getParameter("filename") != null) {
                            path += "/"+request.getParameter("filename");
                        }
                        return path;
                    }
                }
            );
        }
    }
%>

<%-- LockableSubmissionHelper --%>
<%@include file="LockableSubmissionHelper.jspf"%>
<%
    // If the request is scoped to a specific Kapp (space display pages are not)
    if (kapp != null && kapp.hasAttribute("Filehub Url")) {
        // Initialize the LockableSubmissionHelper
        LockableSubmissionHelper lockableSubmissionHelper = new LockableSubmissionHelper(request);
        if (kapp.hasAttribute("Lockable Submission Delegation Attribute")) {
            lockableSubmissionHelper.setDelegationAttribute(
                kapp.getAttributeValue("Lockable Submission Delegation Attribute"));
        }
        if (kapp.hasAttribute("Lockable Submission Group Attribute")) {
            lockableSubmissionHelper.setDelegationAttribute(
                kapp.getAttributeValue("Lockable Submission Group Attribute"));
        }
        request.setAttribute("LockableSubmissionHelper", lockableSubmissionHelper);
    }
%>

<%-- SubmissionHelper --%>
<%@include file="SubmissionHelper.jspf"%>
<%
    request.setAttribute("SubmissionHelper", new SubmissionHelper(request));
%>

<%-- Setup themeBundlePathModifier if necessary --%>
<%
    Logger logger = LoggerFactory.getLogger("com.kineticdata.core.BundleInitialization");
    if (kapp != null && kapp.getAttributeValue("Theme Bundle Path") != null){
        logger.debug("Theme Bundle Path: " +  kapp.getAttributeValue("Theme Bundle Path"));
        String themeBundlePathModifier = "/../" + kapp.getAttributeValue("Theme Bundle Path");
        request.setAttribute("themeBundlePathModifier", themeBundlePathModifier);
    }
%>

<%-- ObjectsHelper --%>
<%@include file="ObjectsHelper.jspf"%>
<%
    request.setAttribute("ObjectsHelper", new ObjectsHelper());
%>